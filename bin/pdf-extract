#!/usr/bin/env ruby

require 'commander/import'
require_relative '../lib/pdf-extract'

program :name, 'pdf-extract'
program :version, '0.0.1'
program :description, 'PDF content extraction toolkit'

objects = ['characters', 'text_chunks', 'text_regions']
views = [:xml, :pdf, :png]

chosen_objects = []

objects.each do |o|
  global_option "--#{o}" do |_|
    chosen_objects << o
  end
end

views.each do |view|
  command view.to_sym do |c|

    c.syntax = "pdf-extract #{view} [objects] filename"
    c.description = "Output selected objects as #{view.upcase}."

    c.action do |args, options|
      # Default to XML output.
      chosen_objects << :xml if chosen_objects.empty?
      
      args.each do |filename|

        out = PdfExtract::view filename, :as => view.to_sym do |pdf|
          chosen_objects.each do |name|
            pdf.send name.to_sym
          end
        end

        case view
        when :xml then say out
        when :png then out.write "tmp.#{view}"
        when :pdf then out.render_file "tmp.#{view}"
        end
        
      end
    end

  end
end
